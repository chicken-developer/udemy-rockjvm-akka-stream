akka {
  loglevel = "DEBUG"
}


#timed assertions  test config
specialTimedAssertionsConfig{
    akka.test.single-expect-default = 0.3s
}

#intercepting log message test
interceptingLogMessages {
    akka {
        loggers = ["akka.testkit.TestEventListener"]
        test {
            filter-leeway = 3s
        }
    }
}

#Router demo
routersDemo {
    akka {
        actor.deployment {
            /poolMaster_02 {
                router = round-robin-pool
                nr-of-instances = 3
            }
            /groupMaster_02 {
                router = round-robin-group
                routees.paths = ["/user/slave_1","/user/slave_2","/user/slave_3","/user/slave_4","/user/slave_5"]
            }
        }
    }
}

#DispatcherDemo
my-dispatcher {
    type = Dispatcher
    #Another dispatcher type: PinnedDisPatcher, CallingThreadDispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
        fixed-pool-size = 3
    }
    throughput = 30 # That is number of messages that a dispatcher can handle for one actor
                    # until that thread moves to another actor
}

dispatchersDemo {
    akka.actor.deployment {
        /nguyenmanhquynh {
            dispatcher = my-dispatcher
        }
    }
}

#Mailboxes demo

mailboxesDemo {

    support-ticket-dispatcher {
        mailbox-type = "Akka_Essentials.part4_Infra.Mailboxes$SupportTicketPriorityMailbox"
    }
    control-mailbox {
        mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
    }
    akka.actor.deployment {
        /altControlAwareActor {
            mailbox = control-mailbox
        }
    }
}